{"name": "3 Проверка чекбокса Профсфера связана с мед.деятельностью", "status": "failed", "statusDetails": {"message": "AssertionError: Не указан E-Mail. != Не указан номер телефона.", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"981573b30300ac7d9b67638c50a02c45\")>\nloc = 'email'\n\n    @allure.story('Покупка полиса от коронавируса')\n    @allure.title(f\"{case_num} \" + \"Проверка чекбокса Профсфера связана с мед.деятельностью\")\n    @pytest.mark.parametrize(\"loc\", FIELD_DATA)\n    def test_check_errors_with_empty_field(driver, loc):\n        page = IndexPageSkin(driver)\n        driver.get(URL)\n    \n        (page.click_checkbox_virus_contact().\n         click_checkbox_agree().\n         click_calculate().\n         enter_fio('Иванов Иван Иванович' if loc != 'fio' else '').\n         enter_birthdate('12121988' if loc != 'birthday' else '').\n         enter_passport_number(2233546755 if loc != 'passport_number' else '').\n         enter_passport_date(12122008 if loc != 'passport_date' else '').\n         enter_address('Москва ул. Ленина 1' if loc != 'address' else '').\n         enter_phone(89222323322 if loc != 'phone' else '').\n         enter_email('test@mail.com' if loc != 'email' else '').\n         click_to_buy().\n>        check_error(loc)\n         )\n\ntests/test_polis_corona_gardian.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <source.pages.page_buy_polis.IndexPageSkin object at 0x7f4ff7743520>\nloc = 'email'\n\n    @allure.step(\"Проверим текст ошибки\")\n    def check_error(self, loc):\n        elem = self.is_element_visible(self.locator.ERROR).text\n        if loc == 'fio':\n            assert elem == source.data.strings.FIO_ERROR, f\"{elem} != {source.data.strings.FIO_ERROR}\"\n        elif loc == 'birthday':\n            assert elem == source.data.strings.BIRTHDAY_ERROR, f\"{elem} != {source.data.strings.BIRTHDAY_ERROR}\"\n        elif loc == 'passport_number':\n            assert elem == source.data.strings.PASSPORT_NUMBER_ERROR, f\"{elem} != {source.data.strings.PASSPORT_NUMBER_ERROR}\"\n        elif loc == 'passport_date':\n            assert elem == source.data.strings.PASSPORT_DATE_ERROR, f\"{elem} != {source.data.strings.PASSPORT_DATE_ERROR}\"\n        elif loc == 'address':\n            assert elem == source.data.strings.ADDRESS_ERROR, f\"{elem} != {source.data.strings.ADDRESS_ERROR}\"\n        elif loc == 'phone':\n            assert elem == source.data.strings.PHONE_ERROR, f\"{elem} != {source.data.strings.PHONE_ERROR}\"\n        elif loc == 'email':\n>           assert elem == source.data.strings.EMAIL_ERROR, f\"{elem} != {source.data.strings.EMAIL_ERROR}\"\nE           AssertionError: Не указан E-Mail. != Не указан номер телефона.\n\nsource/pages/page_buy_polis.py:133: AssertionError"}, "steps": [{"name": "Клик на чекбокс отсутсвие совместнопроживающего больного коронавирусом", "status": "passed", "start": 1703263684626, "stop": 1703263689356}, {"name": "Клик на чекбокс согласие на обработку ПД", "status": "passed", "start": 1703263689356, "stop": 1703263689421}, {"name": "Клик на кнопку Продолжить на этапе Расчет", "status": "passed", "start": 1703263689421, "stop": 1703263689487}, {"name": "Ввод ФИО", "status": "passed", "parameters": [{"name": "name", "value": "'Иванов Иван Иванович'"}], "start": 1703263689487, "stop": 1703263689607}, {"name": "Ввод birthdate", "status": "passed", "parameters": [{"name": "birthdate", "value": "'12121988'"}], "start": 1703263689608, "stop": 1703263689727}, {"name": "Ввод серии и номера паспорта", "status": "passed", "parameters": [{"name": "passport_number", "value": "2233546755"}], "start": 1703263689727, "stop": 1703263689796}, {"name": "Ввод даты выдачи паспорта", "status": "passed", "parameters": [{"name": "date", "value": "12122008"}], "start": 1703263689796, "stop": 1703263689918}, {"name": "Ввод адреса", "status": "passed", "parameters": [{"name": "address", "value": "'Москва ул. Ленина 1'"}], "start": 1703263689918, "stop": 1703263690001}, {"name": "Ввод телефона", "status": "passed", "parameters": [{"name": "phone", "value": "89222323322"}], "start": 1703263690001, "stop": 1703263690095}, {"name": "Ввод email", "status": "passed", "parameters": [{"name": "email", "value": "''"}], "start": 1703263690096, "stop": 1703263690323}, {"name": "Клик Перейти к оплате", "status": "passed", "start": 1703263690323, "stop": 1703263690397}, {"name": "Проверим текст ошибки", "status": "failed", "statusDetails": {"message": "AssertionError: Не указан E-Mail. != Не указан номер телефона.\n", "trace": "  File \"/home/silyin/Desktop/Test/.venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/silyin/Desktop/Test/source/pages/page_buy_polis.py\", line 133, in check_error\n    assert elem == source.data.strings.EMAIL_ERROR, f\"{elem} != {source.data.strings.EMAIL_ERROR}\"\n"}, "parameters": [{"name": "loc", "value": "'email'"}], "start": 1703263690397, "stop": 1703263691502}], "attachments": [{"name": "Screenshot", "source": "9802ea6c-c0aa-470b-9b18-5353f944dbe5-attachment.png", "type": "image/png"}], "parameters": [{"name": "loc", "value": "'email'"}], "start": 1703263684308, "stop": 1703263691502, "uuid": "853db1b3-a709-4b1c-8d10-3f595e48e2f6", "historyId": "3a95e1ccf09dbd9d7a9e2bfda798a023", "testCaseId": "86cbd47d72de716e1b565f8bb0b6dc78", "fullName": "tests.test_polis_corona_gardian#test_check_errors_with_empty_field", "labels": [{"name": "story", "value": "Покупка полиса от коронавируса"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_polis_corona_gardian"}, {"name": "host", "value": "silyin-ThinkBook-14-G4-IAP"}, {"name": "thread", "value": "1323662-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_polis_corona_gardian"}]}