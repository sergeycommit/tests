{"name": "3 Проверка чекбокса Профсфера связана с мед.деятельностью", "status": "failed", "statusDetails": {"message": "AssertionError: Не указана дата рождения. != Не указаны дата выдачи паспорта.", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f70f0f423d309ee471e5dadba62d3c79\")>\nloc = 'passport_date'\n\n    @allure.story('Покупка полиса от коронавируса')\n    @allure.title(f\"{case_num} \" + \"Проверка чекбокса Профсфера связана с мед.деятельностью\")\n    @pytest.mark.parametrize(\"loc\", FIELD_DATA)\n    def test_check_errors_with_empty_field(driver, loc):\n        page = IndexPageSkin(driver)\n        driver.get(URL)\n    \n        (page.click_checkbox_virus_contact().\n         click_checkbox_agree().\n         click_calculate().\n         enter_fio('Иванов Иван Иванович' if loc != 'fio' else '').\n         enter_birthdate('12121988' if loc != 'birthday' else '').\n         enter_passport_number(2233546755 if loc != 'passport_number' else '').\n         enter_passport_date(12122008 if loc != 'passport_date' else '').\n         enter_address('Москва ул. Ленина 1' if loc != 'address' else '').\n         enter_phone(89222323322 if loc != 'phone' else '').\n         enter_email('test@mail.com' if loc != 'email' else '').\n         click_to_buy().\n>        check_error(loc)\n         )\n\ntests/test_polis_corona_gardian.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <source.pages.page_buy_polis.IndexPageSkin object at 0x7f4ff76d54e0>\nloc = 'passport_date'\n\n    @allure.step(\"Проверим текст ошибки\")\n    def check_error(self, loc):\n        elem = self.is_element_visible(self.locator.ERROR).text\n        if loc == 'fio':\n            assert elem == source.data.strings.FIO_ERROR, f\"{elem} != {source.data.strings.FIO_ERROR}\"\n        elif loc == 'birthday':\n            assert elem == source.data.strings.BIRTHDAY_ERROR, f\"{elem} != {source.data.strings.BIRTHDAY_ERROR}\"\n        elif loc == 'passport_number':\n            assert elem == source.data.strings.PASSPORT_NUMBER_ERROR, f\"{elem} != {source.data.strings.PASSPORT_NUMBER_ERROR}\"\n        elif loc == 'passport_date':\n>           assert elem == source.data.strings.PASSPORT_DATE_ERROR, f\"{elem} != {source.data.strings.PASSPORT_DATE_ERROR}\"\nE           AssertionError: Не указана дата рождения. != Не указаны дата выдачи паспорта.\n\nsource/pages/page_buy_polis.py:127: AssertionError"}, "steps": [{"name": "Клик на чекбокс отсутсвие совместнопроживающего больного коронавирусом", "status": "passed", "start": 1703263661992, "stop": 1703263665944}, {"name": "Клик на чекбокс согласие на обработку ПД", "status": "passed", "start": 1703263665944, "stop": 1703263666043}, {"name": "Клик на кнопку Продолжить на этапе Расчет", "status": "passed", "start": 1703263666043, "stop": 1703263666118}, {"name": "Ввод ФИО", "status": "passed", "parameters": [{"name": "name", "value": "'Иванов Иван Иванович'"}], "start": 1703263666118, "stop": 1703263666229}, {"name": "Ввод birthdate", "status": "passed", "parameters": [{"name": "birthdate", "value": "'12121988'"}], "start": 1703263666229, "stop": 1703263666349}, {"name": "Ввод серии и номера паспорта", "status": "passed", "parameters": [{"name": "passport_number", "value": "2233546755"}], "start": 1703263666349, "stop": 1703263666412}, {"name": "Ввод даты выдачи паспорта", "status": "passed", "parameters": [{"name": "date", "value": "''"}], "start": 1703263666413, "stop": 1703263666472}, {"name": "Ввод адреса", "status": "passed", "parameters": [{"name": "address", "value": "'Москва ул. Ленина 1'"}], "start": 1703263666472, "stop": 1703263666556}, {"name": "Ввод телефона", "status": "passed", "parameters": [{"name": "phone", "value": "89222323322"}], "start": 1703263666556, "stop": 1703263666752}, {"name": "Ввод email", "status": "passed", "parameters": [{"name": "email", "value": "'test@mail.com'"}], "start": 1703263666752, "stop": 1703263666850}, {"name": "Клик Перейти к оплате", "status": "passed", "start": 1703263666850, "stop": 1703263666919}, {"name": "Проверим текст ошибки", "status": "failed", "statusDetails": {"message": "AssertionError: Не указана дата рождения. != Не указаны дата выдачи паспорта.\n", "trace": "  File \"/home/silyin/Desktop/Test/.venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/silyin/Desktop/Test/source/pages/page_buy_polis.py\", line 127, in check_error\n    assert elem == source.data.strings.PASSPORT_DATE_ERROR, f\"{elem} != {source.data.strings.PASSPORT_DATE_ERROR}\"\n"}, "parameters": [{"name": "loc", "value": "'passport_date'"}], "start": 1703263666919, "stop": 1703263667980}], "attachments": [{"name": "Screenshot", "source": "70adadd5-2dfd-43f2-8e6d-27dbe7f13751-attachment.png", "type": "image/png"}], "parameters": [{"name": "loc", "value": "'passport_date'"}], "start": 1703263661667, "stop": 1703263667980, "uuid": "320ed544-60cd-4c24-af86-6b19551cccfc", "historyId": "2ad47536dce5bcea74ee96fdf40d55bb", "testCaseId": "86cbd47d72de716e1b565f8bb0b6dc78", "fullName": "tests.test_polis_corona_gardian#test_check_errors_with_empty_field", "labels": [{"name": "story", "value": "Покупка полиса от коронавируса"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_polis_corona_gardian"}, {"name": "host", "value": "silyin-ThinkBook-14-G4-IAP"}, {"name": "thread", "value": "1323662-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_polis_corona_gardian"}]}